# acs-lambda/.github/workflows/deploy-lambda.yml
name: deploy-lambda

on:
  workflow_call:
    inputs:
      function-name:
        required: true
        type: string
      region:
        required: false
        default: us-east-1
        type: string
    secrets:
      GHA_AWS_ROLE_ARN:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # 1) checkout your code
      - uses: actions/checkout@v4

      # 2) configure OIDC → AWS
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.GHA_AWS_ROLE_ARN }}
          aws-region: ${{ inputs.region }}

      # 3) install dependencies (if you have any)
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "Lockfile found, running npm ci…"
            npm ci
          elif [ -f requirements.txt ]; then
            echo "Python requirements.txt found, running pip install…"
            pip install -r requirements.txt
          else
            echo "No dependency files detected, skipping install."
          fi

      # 4) zip up and push to Lambda
      - name: Zip & Deploy to Lambda
        run: |
          zip -r function.zip .
          aws lambda update-function-code \
            --function-name "${{ inputs.function-name }}" \
            --zip-file fileb://function.zip

      # 5) optional sanity check
      - name: Verify deployment
        run: |
          echo "Lambda LastModified:"
          aws lambda get-function-configuration \
            --function-name "${{ inputs.function-name }}" \
            --query LastModified \
            --output text
